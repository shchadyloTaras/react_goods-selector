{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selectedProducts","textProducts","addItems","item","includes","copyItems","filter","product","setState","prevState","clearItems","this","className","join","type","onClick","map","key","classNames","active","Component","ReactDOM","render","document","getElementById"],"mappings":"sPAIMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAwEaC,E,4MApEbC,MAAQ,CACNC,iBAAkB,GAClBC,aAAc,mB,EAGhBC,SAAW,SAACC,GACV,IAAQH,EAAqB,EAAKD,MAA1BC,iBAER,GAAIA,EAAiBI,SAASD,GAAO,CACnC,IAAME,EAAYL,EAAiBM,QAAO,SAAAC,GAAO,OAAIA,IAAYJ,KAEjE,OAAO,EAAKK,SAAS,CAAER,iBAAiB,YAAKK,KAG/C,OAAO,EAAKG,UAAS,SAAAC,GAAS,MAAK,CACjCT,iBAAiB,GAAD,mBAAMS,EAAUT,kBAAhB,CAAkCG,S,EAItDO,WAAa,WACX,EAAKF,SAAS,CAAER,iBAAkB,M,4CAGpC,WAAU,IAAD,OACP,EAA2CW,KAAKZ,MAAxCC,EAAR,EAAQA,iBAAkBC,EAA1B,EAA0BA,aAE1B,OACE,yBAAKW,UAAU,OACb,sCACMX,EADN,YACsBD,EAAiBa,KAAK,QAE5C,4BACEC,KAAK,SACLF,UAAU,gBACVG,QAAS,WACP,EAAKL,eAJT,SAUA,wBAAIE,UAAU,cACXf,EAAgBmB,KAAI,SAAAb,GAAI,OACvB,wBAAIS,UAAU,OAAOK,IAAKd,GACxB,0BACES,UACEM,IAAW,CAAEC,OAAQnB,EAAiBI,SAASD,MAGhDA,GAEH,4BACEW,KAAK,SACLF,UAAU,iBACVG,QAAS,WACP,EAAKb,SAASC,KAGfH,EAAiBI,SAASD,GAAQ,SAAW,iB,GA3D5CiB,aCblBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.315f13ee.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends Component {\n  state = {\n    selectedProducts: [],\n    textProducts: 'Selected goods:',\n  }\n\n  addItems = (item) => {\n    const { selectedProducts } = this.state;\n\n    if (selectedProducts.includes(item)) {\n      const copyItems = selectedProducts.filter(product => product !== item);\n\n      return this.setState({ selectedProducts: [...copyItems] });\n    }\n\n    return this.setState(prevState => ({\n      selectedProducts: [...prevState.selectedProducts, item],\n    }));\n  }\n\n  clearItems = () => {\n    this.setState({ selectedProducts: [] });\n  }\n\n  render() {\n    const { selectedProducts, textProducts } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {`${textProducts} ${selectedProducts.join(', ')}`}\n        </h1>\n        <button\n          type=\"button\"\n          className=\"btn btn-clear\"\n          onClick={() => {\n            this.clearItems();\n          }}\n        >\n          Clear\n        </button>\n\n        <ul className=\"list-items\">\n          {goodsFromServer.map(item => (\n            <li className=\"item\" key={item}>\n              <span\n                className={\n                  classNames({ active: selectedProducts.includes(item) })\n                }\n              >\n                {item}\n              </span>\n              <button\n                type=\"button\"\n                className=\"btn btn-toggle\"\n                onClick={() => {\n                  this.addItems(item);\n                }}\n              >\n                {selectedProducts.includes(item) ? 'Remove' : 'Add'}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}